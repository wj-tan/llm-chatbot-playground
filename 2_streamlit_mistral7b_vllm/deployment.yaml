# Kubernetes Deployment manifest for a vllm server pod
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vllm-server-pvc
  namespace: vllm-server
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: default
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-model
  namespace: vllm-server
  labels:
    app: vllm-model
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-model
  template:
    metadata:
      labels:
        app: vllm-model
    spec:
      serviceAccountName: vllm-sa # oc adm policy add-scc-to-user anyuid -z vllm-sa -n vllm-server
      volumes:
      - name: cache-volume
        persistentVolumeClaim:
          claimName: vllm-server-pvc
      # vLLM needs to access the host's shared memory for tensor parallel inference.
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: "2Gi"
      containers:
      - name: vllm-model
        image: vllm/vllm-openai:latest
        command: ["/bin/sh", "-c"]
        args: [
          "vllm serve facebook/opt-125m" # Change facebook/opt-125m to any hugging face model e.g mistralai/Mistral-7B-Instruct-v0.3
        ]
        env:
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-secret
              key: token
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "10"
            memory: 20G
            nvidia.com/gpu: "1"
          requests:
            cpu: "4"
            memory: 10G
            nvidia.com/gpu: "1"
        volumeMounts:
        - mountPath: /root/.cache/huggingface
          name: cache-volume
        - name: shm
          mountPath: /dev/shm
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-server-service
  namespace: vllm-server
spec:
  selector:
    app: vllm-model
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: vllm-server-route
  namespace: vllm-server
spec:
  to:
    kind: Service
    name: vllm-server-service
  port:
    targetPort: 8000
  tls:
    termination: edge
---
apiVersion: v1
kind: Secret
metadata:
  name: hf-secret
  namespace: default
type: Opaque
stringData:
  token: "REPLACE_WITH_TOKEN"
